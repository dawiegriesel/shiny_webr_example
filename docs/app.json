[{"name":"app.R","content":"library(shiny)\r\nlibrary(bslib)\r\nlibrary(thematic)\r\n\r\n# Define UI for application that draws a histogram\r\nui <- page_sidebar(\r\n    theme = bs_theme(version = 5, bootswatch = \"minty\"),\r\n    title = \"Hello Shinylive!\",\r\n    sidebar = sidebar(\r\n        bslib::input_dark_mode(),\r\n        sliderInput(\"bins\",\r\n                    \"Number of bins:\",\r\n                    min = 1,\r\n                    max = 50,\r\n                    value = 30)\r\n    ),\r\n    card(\r\n        full_screen = TRUE,\r\n        card_header(\"Old Faithful Geyser Data\"),\r\n        plotOutput(\"distPlot\")\r\n    )\r\n)\r\n\r\n# Define server logic required to draw a histogram\r\nserver <- function(input, output) {\r\n\r\n    output$distPlot <- renderPlot({\r\n        # generate bins based on input$bins from ui.R\r\n        x    <- faithful[, 2]\r\n        bins <- seq(min(x), max(x), length.out = input$bins + 1)\r\n\r\n        # draw the histogram with the specified number of bins\r\n        hist(x, breaks = bins, col = 'darkgray', border = 'white',\r\n             xlab = 'Waiting time to next eruption (in mins)',\r\n             main = 'Histogram of waiting times')\r\n    })\r\n}\r\n\r\n# Run the application \r\nthematic_shiny()\r\nshinyApp(ui = ui, server = server)\r\n\r\n# # create webR app\r\n# out_dir <- \"./../shiny_webr_example-export/\"\r\n# shinylive::export(\"./\", out_dir)\r\n# httpuv::runStaticServer(out_dir, port = 4321)\r\n","type":"text"},{"name":"shiny_webr_example.Rproj","content":"Version: 1.0\r\n\r\nRestoreWorkspace: Default\r\nSaveWorkspace: Default\r\nAlwaysSaveHistory: Default\r\n\r\nEnableCodeIndexing: Yes\r\nUseSpacesForTab: Yes\r\nNumSpacesForTab: 4\r\nEncoding: UTF-8\r\n\r\nRnwWeave: Sweave\r\nLaTeX: pdfLaTeX\r\n","type":"text"}]
